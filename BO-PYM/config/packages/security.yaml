security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: in_database

            # form_login:
            #    login_path: auth_connexion
            #    check_path: auth_connexion
            #    csrf_token_generator: security.csrf.token_manager

            # logout:
            #     path: auth_deconnexion
            #     target: auth_connexion

            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            logout:
                path: auth_deconnexion
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Home
        - { path: ^/$, roles: IS_AUTHENTICATED_FULLY }

        # Auth
        - { path: ^/utilisateurs/ajout$, roles: ROLE_ADMIN }
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reinitialisation_mot_de_passe$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/deconnexion$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # User
        - { path: ^/users$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/users/me/edit$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/users/[0-9]+/edit$, roles: ROLE_ADMIN }
        - { path: ^/users/[0-9]+/delete$, roles: ROLE_ADMIN }

        # Batiments
        - { path: ^/batiments$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/batiments/add$, roles: ROLE_ADMIN }
        - { path: ^/batiments/[0-9]+/edit$, roles: ROLE_ADMIN }
        - { path: ^/batiments/[0-9]+/delete$, roles: ROLE_ADMIN }
        - { path: ^/batiments/[0-9]+/bureau/add$, roles: ROLE_ADMIN }
        - { path: ^/batiments/[0-9]+/bureau/[0-9]+/edit$, roles: ROLE_ADMIN }
        - { path: ^/batiments/[0-9]+/bureau/[0-9]+/delete$, roles: ROLE_ADMIN }
        # API
        - { path: ^/api/batiments$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/bureaux$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Domaine
        - { path: ^/domaine$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/domaine/[0-9]+/edit$, roles: ROLE_ADMIN }

        # Entreprises
        - { path: ^/entreprises$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/entreprises/[0-9]+$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/entreprises/add$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/edit$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/delete$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/contact/add$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/contact/[0-9]+/edit$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/contact/[0-9]+/delete$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/poste/add$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/contact/[0-9]+/poste/[0-9]+/delete$, roles: ROLE_ADMIN }  # Fix this
        - { path: ^/entreprises/[0-9]+/activite/add$, roles: ROLE_ADMIN }
        - { path: ^/entreprises/[0-9]+/activite/[0-9]+/delete$, roles: ROLE_ADMIN }  # Fix this
        # API
        - { path: ^/api/entreprises$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/contacts$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Reference Table
        - { path: ^/tables_reference$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/tables_reference/activite/add$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/tables_reference/activite/[0-9]+/edit$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/tables_reference/activite/[0-9]+/delete$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/tables_reference/poste/add$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/tables_reference/poste/[0-9]+/edit$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/tables_reference/poste/[0-9]+/delete$, roles: IS_AUTHENTICATED_FULLY }

        # Reference Table
        - { path: ^/service_categorie$, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/service_categorie/new$, roles: ROLE_ADMIN }
        - { path: ^/service_categorie/[0-9]+/edit$, roles: ROLE_ADMIN }
        - { path: ^/service_categorie/[0-9]+/delete$, roles: ROLE_ADMIN }
        - { path: ^/service_categorie/[0-9]+/services/add$, roles: ROLE_ADMIN }
        - { path: ^/service_categorie/[0-9]+/services/[0-9]+/edit$, roles: ROLE_ADMIN }
        - { path: ^/service_categorie/[0-9]+/services/[0-9]+/delete$, roles: ROLE_ADMIN }
        # API
        - { path: ^/api/service_categories$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/services$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

