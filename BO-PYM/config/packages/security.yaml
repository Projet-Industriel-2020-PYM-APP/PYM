security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            anonymous: true
            provider: in_database
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
                    - App\Security\LoginApiAuthenticator
                entry_point: App\Security\LoginApiAuthenticator
            logout:
                path: auth_api_logout
        main:
            anonymous: true
            provider: in_database
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            logout:
                path: auth_deconnexion
                target: auth_connexion


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # Please use php bin/console debug:router
    access_control:
        # User
        # - { path: ^/users$, roles: IS_AUTHENTICATED_FULLY }